box: 
  id: registry.avalonlabs.io/twiinbaseimage
  username: $USERNAME
  password: $PASSWORD
  tag: latest
  registry: https://registry.avalonlabs.io
no-response-timeout: 15
command-timeout: 30
build:
    steps:
      - script:
         name: Install packages
         code: |
           apt-get update && apt-get upgrade -y
           pip install awscli
      - script:
         name: wercker-app.json change
         code: |
           CONTAINER_NAME=$CONTAINER_NAME
           IMAGE_NAME=$REPOSITORY_NAME
           PORT_NO=$PORT_NO
           sed -i "s#IMAGE_NAME#$IMAGE_NAME#g" wercker-app.json
           sed -i "s/CONTAINER_NAME/$CONTAINER_NAME/g" wercker-app.json
           sed -i "s/PORT_NO/$PORT_NO/g" wercker-app.json
           cat wercker-app.json
      
      - script:
         name: Deploy war file
         code: |
           CONF_FILE=$CONF_FILE
           rm -rf /opt/tomcat/bin/catalina.sh
           sed -i "s/CONF_FILE/$CONF_FILE/g" catalina.sh
           cp -r catalina.sh /opt/tomcat/bin/catalina.sh
           chmod 777 /opt/tomcat/bin/catalina.sh
      - script:
         name: Deploy war file
         code: |
           BUCKET=$BUCKET
           WARFILE=$WAR_FILE_PATH_VERSION
           export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY
           export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_KEY
           export AWS_DEFAULT_REGION=$AWS_REGION
           aws s3 cp s3://${BUCKET}/com/twiinlabs/${WARFILE} /opt/tomcat/webapps/
      - script:
         name: Swagger/Admin UI Download
         code: |
           rm -rf /opt/tomcat/webapps/ROOT/*
           cd /opt/tomcat/webapps/ROOT/
           Sversion=2.1.4
           wget https://codeload.github.com/swagger-api/swagger-ui/zip/v${Sversion}
           mv v${Sversion} swagger-ui-${Sversion}.zip
           unzip swagger-ui-${Sversion}.zip
           mv /opt/tomcat/webapps/ROOT/swagger-ui-${Sversion}/dist/* .
           rm -rf index.html
           cp -r index.html /opt/tomcat/webapps/ROOT/
      - script:
         name: Nginx Admin UI Configuration
         code: |     
           PORT=$PORT_NO       
           sed -i "s/PORT_NO/$PORT/g" swagger
           cp -r swagger /etc/nginx/sites-available/swagger
           cd /etc/nginx/sites-enabled/ && ln -s ../sites-available/swagger
           rm -f /etc/nginx/sites-enabled/default
      - script:
         name: nginx run
         code: |
           chmod a+x /etc/service/nginx/run
         cmd: /sbin/my_init
      - script:
         name: apt cleanup
         code : apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
      - internal/docker-push:
          username: $USERNAME
          password: $PASSWORD
          tag: latest
          repository: $REPOSITORY_NAME
          registry: https://registry.avalonlabs.io
deploy:
  box: python:2.7-slim
  aws-ecs:
  - pip-install
  - script:
      name: copy
      code: mkdir /app && cp wercker-app.json /app/
  - tonnu/aws-ecs:
      key: $AWS_ACCESS_KEY
      secret: $AWS_SECRET_KEY
      region: $AWS_REGION
      cluster-name: $CLUSTER_NAME
      service-name: $SERVICE_NAME
      task-definition-name: $TASK_DEFINITION
      task-definition-file: /app/wercker-app.json
      minimum-running-tasks: 1
